name: Docker Image CI
on:
  push:
    branches: [ "main" , "push-docker-image"]
  pull_request:
    branches: [ "main", "push-docker-image" ]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: petstore
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::889772146711:role/zeeshan-git-actions
          aws-region: ap-south-1
      -
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: zeeshan-pet-store
          IMAGE_TAG: pet-store-backend:${{ github.sha }}

        run: |
          docker build --build-arg DB_URL=jdbc:postgresql://172.17.0.1:5432/petstore --build-arg DB_USER_NAME=postgres --build-arg DB_PASSWORD=postgres . --file Dockerfile --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG      
        